{
  "Controller": {
    "prefix": "controller",
    "body": [
      "/* What this Controller does... */",
      "import { Request, Response } from 'express'",

      "class className {async handle(req: Request, res: Response) {",
      "try { const service = 'new Service();'",
      "const result = await 'service.execute()';res.status(200).json({ result: result })} ",
      "",
      "catch (error) {res.status(401).json({ error: error })} }};export { className }"
    ],
    "description": "import a controller class"
  },
  "Service": {
    "prefix": "service",
    "body": [
      "/* What this Service does... */",
      "",
      "class className {async execute() {const data = 'await data';return data;}};",
      "",
      "export { className };"
    ],
    "description": "import a service class"
  },
  "AppNodeJS": {
    "prefix": "app",
    "body": [
      "import express from 'express'",
      "import cors from 'cors'",
      "import http from 'http'",
      "import { router } from '../Router/router'",
      "import 'dotenv/config'",
      "// Start the app",
      "const app = express()",

      "//Connections",
      "app.use(cors())",

      "app.use(express.json())",
      "app.use(router)",
      "//just for test",
      "app.get('/', (req, res) => {return res.send('working')})",

      "/*Server with http method*/",
      "const serverHttp = http.createServer(app)",

      "export { serverHttp }"
    ],
    "description": "App nodeJS"
  },

  "ServerNodeJS": {
    "prefix": "server",
    "body": [
      "import { serverHttp } from './app/app'",
      "",
      "const port = process.env.SERVER_PORT || 3000",
      "",
      "serverHttp.listen(port, (): void => {console.log(`Running on port: ${port}`)})"
    ],
    "description": "App nodeJS"
  }
}
